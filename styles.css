* {
  margin: 0;
  padding: 0;
  /* box-sizing: border-box; */
}

body,
h2 {
  font-family: 'Source Sans Pro', sans-serif;
}
.container {
 /* border: 1px solid red; */
 width: 1000px;
 margin: 0 auto;
 display: inherit;
 justify-content: inherit;
 align-items: inherit;
 height: inherit;
 flex-wrap: inherit;
}
.header {
  background-color: #1b2127;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 70px;
}

ol, li {
  list-style: none;
}
.menu,
.header  ol,
.header ol li,
.header a {
  height: inherit;
}
.header ol {
  display: flex;
}


.header a {
  display: flex;
  align-items: center;
  text-decoration: none;
  padding: 0 10px;
}

h1, h2, h3, h4, h5, h6,
.proyect strong {
 font-family: 'Fjalla One', sans-serif;
}

h1 {
  font-size: 40px;
  line-height: 1.5;
  font-weight: normal;
  letter-spacing: -.2px;
}


h1 strong,
h2  {
  color: #026fff ;
}

h2 {
  text-transform: uppercase;
  font-weight: bold; 
  font-size: 24px;
  margin-bottom: 40px;
  margin-top: 0.83em; 
}

h1,
.header,
.header a,
.footer,
.footer a {
  color: white;
}

.hero {
  height: 300px;
  background-color:  #1b2127; 
  /* background-image: url('./images/platzi-conf.jpg'); */
  /* background-size: 500px 300px ; */
  /* background-repeat: no-repeat; */
  /* background-position-x: right; */
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.hero-image {
  object-fit: cover;
}
.portfolio {
  background-color: #fafafa;
  padding: 20px;
}



.proyect-details,
.proyect-imageContainer,
.event-imageContainer {
  width: 500px;
}

.proyect {
  border: 1px solid gray;
  border-radius: 10px;
  margin: 10px;
  margin-bottom: 15px;
  padding: 20px;
  background: white;
  display: flex;
  align-content: center;
  justify-content: space-between;
}

.proyect-title {
  font-size: 30px;
  margin-bottom: 10px;
}

.proyect-course,
.proyect-date,
.proyect-url {
  margin: 10px 0;
}




.footer {
 background: #1b2127;
 display: flex;
 align-items: center;
 justify-content: space-between;
}

.footer img {
  vertical-align: middle;
}

.events {
  margin: 10px;
  padding: 20px;
}
.event-list {
  display: flex;
  flex-wrap: wrap;
}
.event-list-title {
  margin-left: 20px;
}
.event {
  margin: 10px;
  width: 480px;
  border-radius: 10px;
  flex-shrink: 0;
  overflow: hidden;
  background: #f4fbff
}
.event img {
 width: 480px;
 height: 200px;
 object-fit: cover;
}

.event-detail {
  margin: 20px ;
  margin-top: -40px;
  background: white;
  position: relative;
  padding: 20px;
  text-align: center;
}
.event-description {
  text-align: left;
}

.event-url {
  color: #056fff;
  border: 1px solid ;
  padding: 5px 20px;
  text-decoration: none;
  border-radius: 5px;
}

.contact {
  background-color: #056fff;
  color: white;
  height: 150px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}



.social-link{
  display: inline-block;
  height: 50px;
  width: 50px;
  margin: 10px;
  background-size: 50px;
}

.social-link.twitter {
  background-image: url('./images/twitter.svg');
}
.social-link.faceboock {
  background-image: url('./images/facebook.svg');
}

.social-link.github {
  background-image: url('./images/github.svg');
}
.social-link.instagram {
  background-image: url('./images/instagram.svg');
}

.form-email input{
  border-color: gray;
  border-radius: 5px;
  border-style: solid;
  padding: 10px 20px 10px 25px;
  background-image: url('./images/envelope.svg');
  background-size: 15px 15px;
  background-repeat: no-repeat;
  background-position-y: center;
  background-position-x: 5px; 
}
.form-email button {
  display: block;
  margin-top: 10px;
  background: transparent;
  color: white;
  border: 1px solid white;
  padding: 10px 0;
  border-radius: 5px;
  width: 100px ;
  margin-top: 10px;
}

.form-email h3 {
  font-family: 'Source Sans Pro', sans-serif;
  margin-top: 10px;
  margin-bottom: 10px;

}



/* 
reglas // el selector + la declaracoion
selectores// etiqueta-clase-id-etc
declaraciones// todo lo esta dentro de las llaves
propiesdades
valores */
/* selector de etiqueta : header-section
 header {
  background: pink;
} 
selector descendeste: selecciona
 un elemento que sea hijo de otro 
 body header div nav ol li a  {
 
}
 selector de clase '.'
 .link  {
 
}
puedes aplicarle estilos a  todos los elementos con esa clase
selectores de id
sirvenpara darle estilos a un solo elemento ya que el id es único

#portafolio {


  Unidades de medida:
  se pueden representar:
  -palabras clave : red-blue,transparent, etc. son limitados.
  colores sensillos
  -hexadecimal rgba() rgb()
  colores exactos, específicos
se componen de cualquiera de estos 16 caractere:(hexadcimal)
123456789ABCDEF

   valor máximo(full color, luminosidadcolor ):    valor mínimo(ausencia de color ):
   #FFFFFF       => #FFF    #0000000   => #000 
   blanco,                    negro

   dos primeros caracteres despi¿ues de #:
   representa el rojo,
   los dos siguientes: verde 
   dos siguientes : blue


   #FFOOOO rojo
   #00ff00 verde
   #00000FF azul

  -usando hls() hlsa()
UNIDADES DE MEDIDa
pixel: es la menor unidad homogenea de color
 que forma parte de una imagen digital

 podemos usarlos para redimensionar 
 imgenes, texto,
bordes, margenes, etc


Fuentes personalizadas
incluir fuentes:
 body {
   font-family: Arial, Helvetica, sans-serif;
 }
 Arial, pcion 1
 Helvetica si no encuentra la opcion 1 
sans-serif  indica que debe tener serifas


h1 {
  font-family: 'Times New Roman', Times, serif;
}

cuando el nombre tiene espacios, debe estar entre comillas

Además de todas las propiedades comunes que comparten los elementos estándar de html, como: display, position, margin, padding, top, left, right, bottom, border, etc., los elementos que admiten contenidos textuales aceptan una serie particular de propiedades entre las que se encuentran las siguientes:

font-family: define el tipo de fuente aplicado al texto.
color: define el colore del texto.
 d |line-height: define la altura desde la base del texto hasta la base de la siguiente línea de texto.
font-size: define el tamaño del texto, admite cualquiera de las unidades de medida disponibles.
letter-spacing: define el espaciado entre las letras del texto.
font-weight: define el ““peso”” de la letra, negrita, normal, light y normalmente se indica en múltiplos de 100 o usando keywords.
text-decoration: define el decorado del texto como subrayado, tachado, con subrayado superior, etc.
text-transform: permite transformar el estado de mayúsculas / minúsculas en el texto, usando uppercase para mayúsculas sostenidas, lowercase para minúsculas sostenidas, etc.
h1 {
   line-height: 150%;
   line-height: 1.5;
   line-height: 1.5em;
}

h1 {
  font-size: 40px;
  line-height: 1.5;
  font-weight: 400; 
  font-weight: normal; 
  font-weight: bold;
  font-style: italic;
}


Estas son todas las herramientas (páginas, extensiones, etc) sobre colores, colorpicker, y demás, que he recopilado de los usuarios platzi que han comentado en estas clases:

http://www.colorzilla.com/chrome/
https://www.w3schools.com/colors/colors_picker.asp?color=80ced6
https://cssgradient.io/
https://htmlcolorcodes.com/es/
https://www.materialpalette.com/colors
https://materializecss.com/
https://color.adobe.com/es/create/color-wheel/
http://thestocks.im/?utm_source=launchers

http://html-color.org/es/
http://prettycolors.tumblr.com/add
https://www.rapidtables.com/web/color/html-color-codes.html
https://colorhunt.co/
https://www.color-hex.com/
http://annystudio.com/software/colorpicker/
https://picpick.uptodown.com/windows/descargar

https://html-color-codes.info/codigos-de-colores-hexadecimales/

Color Picker para Visual Studio Code:
https://marketplace.visualstudio.com/items?itemName=anseki.vscode-color
 

 gris oscuro : #1d252c
  gtris claro:#626262
  background gris:#1b2127
  extensiones colorpicker
  color snaper // solo funciona en MAC
   


  BORDES:
  .proyect {
  border: tamaño, tipo, estilo;
}

.proyect {
  border: 1px solid gray;
  border-radius: 10px;
   border-top-left-radius: 900px ;
  background-color: #1b2127; 
}

MARGENES
h1 {
  margin: top right bottom left;
}

   */
/* 
Tipos de display
Display es la propiedad de css que indica cómo debe ser mostrado un elemento html. Todos los elementos tienen algún tipo de display. Si un elemento no se ve en pantalla es porque segurmanete su display es none.

Los valores más comunes que puede recibir la propiedad display son:

block: el elemento intenta abarcar todo el ancho posible.
inline: reduce su tamaño exclusivamente hasta lo que abarca su contenido, descartando las propiedades width y height.
inline-block: combina lo mejor de block e inline, ya que respeta las dimensiones indicadas en las propiedades width y height, pero coloca el elemento en línea (al costado) de elementos hermanos que también tengan display: inline o inline-block.
flex: asume algunas propiedades por defecto que favorecen la alineación de los elementos internos.
grid: similar a flex, asume algunas propiedades por defecto organizando los contenidos en filas y columnas.
none: oculta el elemento.
*/


/* 

FLEX:
display que afecta eldisplay 
del elemento con respecto a sus hijo directos

propiedad paralos hijos de un elemento flex, para que el ancho de  no cambie:
flex-shrink: 0 -1;
0  nada encojible
1 encojible


flex-wrap: wrap;
para que cuando los hijosde 
un elelemento flex ya no quepan en unalinea, bajen a la siguiente
Alinear elementos Horizontal:
justify-content: flex-start- flex-end - center- 
space-araund : espacio igual a la izquierda y derecha de cada elemento hijo

space-between - el mismo espacio entre los hijos, exepto en los extremos ,
 dondeno hay nada de esppacio
space-evenly :el mismo espacio entre todos los hijos

Alinear elementos Vertical:
align-items:  center;

 align-self: flex-start; 
APRENDÍ COSAS NUEVAS:
VERTICAL-ALIGN 
object-fit: cover;
line-height
position

Posicionamiento:




*/